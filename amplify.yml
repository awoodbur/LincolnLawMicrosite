version: 1
frontend:
  phases:
    preBuild:
      commands:
        - corepack enable
        - npm ci
    build:
      commands:
        # CRITICAL: Write environment variables to .env.production for runtime access
        # This makes env vars available to Next.js API routes (serverless functions)
        - echo "Writing environment variables to .env.production..."
        - env | grep -e DATABASE_URL >> .env.production || true
        - env | grep -e MAILGUN_ >> .env.production || true
        - env | grep -e STAFF_LEADS_EMAIL >> .env.production || true
        - env | grep -e PLAID_ >> .env.production || true
        - env | grep -e NEXT_PUBLIC_ >> .env.production || true
        - env | grep -e NODE_ENV >> .env.production || true
        - echo ".env.production created with $(wc -l < .env.production) variables"
        # Generate Prisma Client (required for Next.js build)
        - npx prisma generate
        # Run database migrations
        - |
          if [ -n "$DATABASE_URL" ] && [[ "$DATABASE_URL" == postgres* ]]; then
            echo "Running database migrations..."
            npx prisma migrate deploy
          else
            echo "Warning: DATABASE_URL not set or not PostgreSQL - skipping migrations"
          fi
        # Build Next.js app
        - npm run build
  artifacts:
    baseDirectory: .next
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
      - .next/cache/**/*
